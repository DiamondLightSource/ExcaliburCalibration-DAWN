"""Detector Lab 1M.

To create a new detector module, copy this file into the same directory with a
name specifying the new detector and fill in the correct data. Also replace
the top line description of the detector.
"""
from collections import OrderedDict, namedtuple

import numpy as np

Detector = namedtuple("Detector", ["name", "nodes", "master_node",
                                   "servers", "ip_addresses"])

# Detector Specification:
detector = Detector(name="detectorlab1", nodes=[1], master_node=1,
                    servers=["p99-excalibur01"],
                    ip_addresses=["192.168.0.1"])

# Default DAC Values:
DACS = OrderedDict([('Threshold1', 0),
                    ('Threshold2', 0),
                    ('Threshold3', 0),
                    ('Threshold4', 0),
                    ('Threshold5', 0),
                    ('Threshold6', 0),
                    ('Threshold7', 0),
                    ('Preamp', 175),  # Could use 200
                    ('Ikrum', 10),  # Low Ikrum for better low energy X-ray
                                    # sensitivity
                    ('Shaper', 150),
                    ('Disc', 125),
                    ('DiscLS', 100),
                    ('ShaperTest', 0),
                    ('DACDiscL', 90),
                    ('DACTest', 0),
                    ('DACDiscH', 90),
                    ('Delay', 30),
                    ('TPBuffIn', 128),
                    ('TPBuffOut', 4),
                    ('RPZ', 255),  # RPZ is disabled at 255
                    ('TPREF', 128),
                    ('TPREFA', 500),
                    ('TPREFB', 500)])

# GND, FBK and Cas DAC Arrays:
GND_DAC = np.array([[141, 144, 154, 143, 161, 158, 144, 136],
                    [154, 155, 147, 147, 147, 155, 158, 151],
                    [143, 156, 139, 150, 144, 150, 149, 158],
                    [143, 156, 139, 150, 144, 150, 149, 158],
                    [151, 135, 150, 162, 153, 144, 134, 145],
                    [134, 145, 171, 146, 152, 142, 141, 141]]
                   ).astype('int')
FBK_DAC = np.array([[190, 195, 201, 198, 220, 218, 198, 192],
                    [215, 202, 208, 200, 198, 211, 255, 209],
                    [189, 213, 185, 193, 204, 207, 198, 220],
                    [189, 213, 185, 193, 204, 207, 198, 220],
                    [200, 195, 205, 218, 202, 194, 185, 197],
                    [192, 203, 228, 197, 206, 191, 206, 189]]
                   ).astype('int')
CAS_DAC = np.array([[178, 195, 196, 182, 213, 201, 199, 186],
                    [208, 197, 198, 194, 192, 207, 199, 188],
                    [181, 201, 177, 184, 194, 193, 193, 210],
                    [181, 201, 177, 184, 194, 193, 193, 210],
                    [196, 180, 202, 214, 197, 193, 186, 187],
                    [178, 191, 218, 184, 192, 186, 195, 185]]
                   ).astype('int')

# Energy-DAC Arrays:
E1_DAC = dict(shgm=np.array([[20, 62, 62, 62, 62, 62, 62, 62],
                             [64, 64, 64, 64, 64, 64, 64, 64],
                             [62, 62, 62, 62, 62, 62, 62, 62],
                             [60, 35, 64, 64, 64, 64, 64, 64],
                             [64, 64, 64, 64, 64, 64, 64, 64],
                             [64, 64, 64, 64, 64, 64, 64, 64]]
                            ).astype('float'),
              hgm=np.array([[62, 62, 62, 62, 62, 62, 62, 62],
                            [64, 64, 64, 64, 64, 64, 64, 64],
                            [62, 62, 62, 62, 62, 62, 62, 62],
                            [60, 35, 64, 64, 64, 64, 64, 64],
                            [64, 64, 64, 64, 64, 64, 64, 64],
                            [64, 64, 64, 64, 64, 64, 64, 64]]
                           ).astype('float'),
              lgm=np.array([[20, 62, 62, 62, 62, 62, 62, 62],
                            [64, 64, 64, 64, 64, 64, 64, 64],
                            [62, 62, 62, 62, 62, 62, 62, 62],
                            [60, 35, 64, 64, 64, 64, 64, 64],
                            [64, 64, 64, 64, 64, 64, 64, 64],
                            [64, 64, 64, 64, 64, 64, 64, 64]]
                           ).astype('float'),
              slgm=np.array([[62, 62, 62, 62, 62, 62, 62, 62],
                             [64, 64, 64, 64, 64, 64, 64, 64],
                             [62, 62, 62, 62, 62, 62, 62, 62],
                             [60, 35, 64, 64, 64, 64, 64, 64],
                             [64, 64, 64, 64, 64, 64, 64, 64],
                             [64, 64, 64, 64, 64, 64, 64, 64]]
                            ).astype('float'))
E2_DAC = dict(shgm=np.array([[120, 110, 100, 90, 80, 70, 60, 50],
                             [64, 64, 64, 64, 64, 64, 64, 64],
                             [62, 62, 62, 62, 62, 62, 62, 62],
                             [60, 35, 64, 64, 64, 64, 64, 64],
                             [64, 64, 64, 64, 64, 64, 64, 64],
                             [64, 64, 64, 64, 64, 64, 64, 64]]
                            ).astype('float'),
              hgm=np.array([[62, 62, 62, 62, 62, 62, 62, 62],
                            [64, 64, 64, 64, 64, 64, 64, 64],
                            [62, 62, 62, 62, 62, 62, 62, 62],
                            [60, 35, 64, 64, 64, 64, 64, 64],
                            [64, 64, 64, 64, 64, 64, 64, 64],
                            [64, 64, 64, 64, 64, 64, 64, 64]]
                           ).astype('float'),
              lgm=np.array([[20, 62, 62, 62, 62, 62, 62, 62],
                            [64, 64, 64, 64, 64, 64, 64, 64],
                            [62, 62, 62, 62, 62, 62, 62, 62],
                            [60, 35, 64, 64, 64, 64, 64, 64],
                            [64, 64, 64, 64, 64, 64, 64, 64],
                            [64, 64, 64, 64, 64, 64, 64, 64]]
                           ).astype('float'),
              slgm=np.array([[62, 62, 62, 62, 62, 62, 62, 62],
                             [64, 64, 64, 64, 64, 64, 64, 64],
                             [62, 62, 62, 62, 62, 62, 62, 62],
                             [60, 35, 64, 64, 64, 64, 64, 64],
                             [64, 64, 64, 64, 64, 64, 64, 64],
                             [64, 64, 64, 64, 64, 64, 64, 64]]
                            ).astype('float'))
E3_DAC = dict(shgm=np.array([[250, 110, 100, 90, 80, 70, 60, 50],
                             [64, 64, 64, 64, 64, 64, 64, 64],
                             [62, 62, 62, 62, 62, 62, 62, 62],
                             [60, 35, 64, 64, 64, 64, 64, 64],
                             [64, 64, 64, 64, 64, 64, 64, 64],
                             [64, 64, 64, 64, 64, 64, 64, 64]]
                            ).astype('float'),
              hgm=np.array([[62, 62, 62, 62, 62, 62, 62, 62],
                            [64, 64, 64, 64, 64, 64, 64, 64],
                            [62, 62, 62, 62, 62, 62, 62, 62],
                            [60, 35, 64, 64, 64, 64, 64, 64],
                            [64, 64, 64, 64, 64, 64, 64, 64],
                            [64, 64, 64, 64, 64, 64, 64, 64]]
                           ).astype('float'),
              lgm=np.array([[20, 62, 62, 62, 62, 62, 62, 62],
                            [64, 64, 64, 64, 64, 64, 64, 64],
                            [62, 62, 62, 62, 62, 62, 62, 62],
                            [60, 35, 64, 64, 64, 64, 64, 64],
                            [64, 64, 64, 64, 64, 64, 64, 64],
                            [64, 64, 64, 64, 64, 64, 64, 64]]
                           ).astype('float'),
              slgm=np.array([[62, 62, 62, 62, 62, 62, 62, 62],
                             [64, 64, 64, 64, 64, 64, 64, 64],
                             [62, 62, 62, 62, 62, 62, 62, 62],
                             [60, 35, 64, 64, 64, 64, 64, 64],
                             [64, 64, 64, 64, 64, 64, 64, 64],
                             [64, 64, 64, 64, 64, 64, 64, 64]]
                            ).astype('float'))
